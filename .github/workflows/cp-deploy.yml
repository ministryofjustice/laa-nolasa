# This workflow will only trigger if the workflow in cp-build.yml has been completed, and deployments should only happen if that workflow was completed successfully.
# Note that only the default branch (master) of this workflow is ran, thus any changes here needs to be pushed to the default branch first.

name: Deploy to TST, PRE, PRD

permissions:
  id-token: write
  contents: read

# on:
#   workflow_run:
#     workflows: [Build image and deploy to DEV]
#     types:
#       - completed
on:
  push:
    branches:
    - 'master'

jobs:
  deploy-application-test:
    environment: test
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v3
        # with:
        #   ref: ${{ github.event.workflow_run.head_branch }} # Checkout to the branch that triggered cp-build.yml workflow
      - name: Authenticate to the Kubernetes cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }} # K8s Cluster name needed defining as env for it to work
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Helm deploy to Test environment
        env:
          GITHUB_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}  # Github commit sha that triggered cp-build.yml workflow
        run: |
          cd helm_deploy/not-on-libra-auto-search-application
          helm upgrade not-on-libra-auto-search-application -f values_tst.yaml . --namespace ${{ secrets.KUBE_NAMESPACE }} --install --set nolasa.image.tag=${GITHUB_HEAD_SHA} --set nolasa.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ vars.ECR_REPOSITORY }}
  deploy-application-preprod:
    environment: preproduction
    needs: deploy-application-test
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v3
        # with:
        #   ref: ${{ github.event.workflow_run.head_branch }}    
      - name: Authenticate to the Kubernetes cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }} # K8s Cluster name needed defining as env for it to work
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Helm deploy to Preproduction environment
        env:
          GITHUB_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          cd helm_deploy/not-on-libra-auto-search-application
          helm upgrade not-on-libra-auto-search-application -f values_preprod.yaml . --namespace ${{ secrets.KUBE_NAMESPACE }} --install --set nolasa.image.tag=${GITHUB_HEAD_SHA} --set nolasa.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ vars.ECR_REPOSITORY }}
  deploy-application-prod:
    environment: production
    needs: deploy-application-preprod
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v3
        # with:
        #   ref: ${{ github.event.workflow_run.head_branch }}     
      - name: Authenticate to the Kubernetes cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }} # K8s Cluster name needed defining as env for it to work
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Helm deploy to Production environment
        env:
          GITHUB_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          cd helm_deploy/not-on-libra-auto-search-application
          helm upgrade not-on-libra-auto-search-application -f values_prd.yaml . --namespace ${{ secrets.KUBE_NAMESPACE }} --install --set nolasa.image.tag=${GITHUB_HEAD_SHA} --set nolasa.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ vars.ECR_REPOSITORY }}
