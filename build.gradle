buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

configurations {
    jaxb
}

sourceCompatibility = 1.11

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

// tag::wsdl[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/wsdl/LIBRAService.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(includeantruntime: false, destdir: classesDir,  debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::wsdl[]
dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-web-services')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.cloud:spring-cloud-starter-aws')
    compile('io.micrometer:micrometer-registry-cloudwatch:1.0.6')

    compile name: 'ojdbc8'
    compileOnly "org.projectlombok:lombok:1.18.6"
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile 'com.amazonaws:aws-xray-recorder-sdk-spring:1.3.1'
    compile 'org.aspectj:aspectjrt:1.9.2'
    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    compile('javax.activation:javax.activation-api:1.2.0')
    compile('javax.xml.bind:jaxb-api:2.3.0')
    compile('org.glassfish.jaxb:jaxb-core:2.3.0')
    compile('org.glassfish.jaxb:jaxb-runtime:2.3.2')
    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
}

bootJar {
    baseName = 'nolasa'

    from genJaxb.classesDir
}

task afterEclipseImport {
    dependsOn genJaxb
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
    }
}